// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaxiServiceBD.Models;

namespace TaxiServiceBD.Migrations
{
    [DbContext(typeof(TaxiServiceContext))]
    [Migration("20211026213021__spUpdateUser")]
    partial class _spUpdateUser
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TaxiServiceBD.Models.CategoriesClassDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("CategoryID");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("TaxiClassId")
                        .HasColumnType("int")
                        .HasColumnName("TaxiClassID");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("TaxiClassId");

                    b.ToTable("CategoriesClassDetails");
                });

            modelBuilder.Entity("TaxiServiceBD.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FullName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("TaxiServiceBD.Models.Driver", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("Rate")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "PhoneNumber" }, "IX_DriversPhone")
                        .IsUnique();

                    b.HasIndex(new[] { "FullName" }, "IX_Drivers_Name")
                        .IsUnique();

                    b.ToTable("Drivers");
                });

            modelBuilder.Entity("TaxiServiceBD.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryClassId")
                        .HasColumnType("int")
                        .HasColumnName("CategoryClassID");

                    b.Property<DateTime?>("DateOfCreation")
                        .HasColumnType("date");

                    b.Property<int?>("DriverId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryClassId");

                    b.HasIndex("DriverId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("TaxiServiceBD.Models.TaxiClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FullName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("TaxiClass");
                });

            modelBuilder.Entity("TaxiServiceBD.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "FullName" }, "IX_UsersName")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TaxiServiceBD.Models.CategoriesClassDetail", b =>
                {
                    b.HasOne("TaxiServiceBD.Models.Category", "Category")
                        .WithMany("CategoriesClassDetails")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK_CategoriesClassDetails_Categories")
                        .IsRequired();

                    b.HasOne("TaxiServiceBD.Models.TaxiClass", "TaxiClass")
                        .WithMany("CategoriesClassDetails")
                        .HasForeignKey("TaxiClassId")
                        .HasConstraintName("FK_CategoriesClassDetails_TaxiClass")
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("TaxiClass");
                });

            modelBuilder.Entity("TaxiServiceBD.Models.Order", b =>
                {
                    b.HasOne("TaxiServiceBD.Models.CategoriesClassDetail", "CategoryClass")
                        .WithMany("Orders")
                        .HasForeignKey("CategoryClassId")
                        .HasConstraintName("FK_Orders_CategoriesClassDetails");

                    b.HasOne("TaxiServiceBD.Models.Driver", "Driver")
                        .WithMany("Orders")
                        .HasForeignKey("DriverId")
                        .HasConstraintName("FK__Orders__DriverId__30F848ED");

                    b.HasOne("TaxiServiceBD.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Orders__UserId__300424B4");

                    b.Navigation("CategoryClass");

                    b.Navigation("Driver");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TaxiServiceBD.Models.CategoriesClassDetail", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("TaxiServiceBD.Models.Category", b =>
                {
                    b.Navigation("CategoriesClassDetails");
                });

            modelBuilder.Entity("TaxiServiceBD.Models.Driver", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("TaxiServiceBD.Models.TaxiClass", b =>
                {
                    b.Navigation("CategoriesClassDetails");
                });

            modelBuilder.Entity("TaxiServiceBD.Models.User", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
